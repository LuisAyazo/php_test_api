# name: Branch Deleted OWHH
# env:
#   PROJECT_ID: ${{ secrets.GCLOUD_DEV_PROJECT_ID }}
# #   SERVICE: ${{ github.event.repository.name }}
#   SERVICE: php-test-luis
#   REGION: us-central1

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - maste

jobs:
  hello_world_job_luis:
    runs-on: ubuntu-latest
    name: notify intelligent
    steps:
    - name: tratando de probocar error
      run: |
        curl http://cacaplop.com  
    - name: Hello world action step
      id: hello
      uses: LuisAyazo/slack-notifications-action@master
      with:
        channel: "devops"
        deploy_url: "${{ steps.hello.outputs.message_id }}"
        color: ${{ job.status }}
      env:
        SLACK_API_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
    # Use the output from the `hello` step
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.message_id }}"
    
    
# name: Slack Notification Demo
# jobs:
#   slackNotification:
#     name: Slack Notification
#     runs-on: ubuntu-latest
#     steps:
#     - name: Notify slack success
#       id: slack # IMPORTANT: reference this step ID value in future Slack steps
#       uses: voxmedia/github-action-slack-notify-build@v1
#       env:
#         SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
#       with:
#         channel: general
#         status: STARTED
#         color: good

#     - name: Notify slack success 
#       if: success()
#       env:
#         SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
#       uses: voxmedia/github-action-slack-notify-build@v1
#       with:
#         message_id: ${{ steps.slack.outputs.message_id }}
#         channel: general
#         status: STARTING
#         color: warning
      
#     - name: run this message test | deploy
#       run: |
#         echo "esto correra ?"
#         curl -H "Accept: application/vnd.github.v3+json" \
#         https://api.github.com/repos/LuisAyazo/php_test_api/actions/runs
#     - name: tratando de probocar error
#       run: |
#         curl http://cacaplop.com  
        

#     - name: Notify slack success
#       if: success()
#       env:
#         SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
#       uses: voxmedia/github-action-slack-notify-build@v1
#       with:
#         message_id: ${{ steps.slack.outputs.message_id }}
#         channel: general
#         status: SUCCESS
#         color: good

#     - name: Notify slack fail
#       if: failure()
#       env:
#         SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
#       uses: voxmedia/github-action-slack-notify-build@v1
#       with:
#         message_id: ${{ steps.slack.outputs.message_id }}
#         channel: general
#         status: FAILED
#         color: danger

# on: delete
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: run notification
#         run: |
#           echo "esto correra ?"
#           echo "repo ${{ github.event.ref }}"
#           echo "Servicio ${{env.SERVICE}}"
#           echo "Servicio ${{env.PROJECT_ID}}"
#           echo "que es esto: ${{ steps.variables.outputs.BRANCH_NAME }}"
#   delete:
#     if: github.event.ref_type == 'branch'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Clean up
#         run: |
#           echo "Clean up for branch ${{ github.event.ref }}"
          
#       - name: Setup Variables
#         id: variables
#         shell: bash
#         run: echo "::set-output name=BRANCH_NAME::$(echo ${{ github.event.ref }}  | sed 's/\//-/g;s/_/-/g')"
        
#       - name: Setup Cloud SDK
#         uses: google-github-actions/setup-gcloud@master
#         with:
#           project_id: ${{ env.PROJECT_ID }}
#           service_account_key: ${{ secrets.GCLOUD_SA_DEV_PROJECT }}
#           export_default_credentials: true

#       - name: Purge CloudRun Service
#         run: gcloud run services delete ${{ env.SERVICE }}-${{ steps.variables.outputs.BRANCH_NAME }} --quiet --region ${{ env.REGION }}
